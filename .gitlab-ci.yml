stages:
  - provision

provision_and_configure:
  stage: provision
  image: google/cloud-sdk:alpine
  script:
    # 1. Install required packages: git, curl, unzip, bash, openssh, python3 and pip.
    - apk update && apk add --no-cache git curl unzip bash openssh python3 py3-pip
    # 2. Install Terraform manually.
    - |
      TERRAFORM_VERSION=1.5.0
      curl -o terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      unzip terraform.zip
      chmod +x terraform
      mv terraform /usr/local/bin/
    # 3. Decode and configure your service account credentials for Terraform.
    - echo "$GCLOUD_SERVICE_ACCOUNT_KEY_B64" | base64 -d > /tmp/gcloud_service_account.json
    - export GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcloud_service_account.json
    - gcloud auth activate-service-account --key-file=/tmp/gcloud_service_account.json
    - gcloud config set project "$GCP_PROJECT_ID"
    # 4. Generate an SSH key pair for the jenkins user.
    - ssh-keygen -t rsa -b 4096 -f /tmp/id_rsa -N ""
    # 5. Export TF_VAR variables (including the SSH public key) so Terraform can use them.
    - export TF_VAR_project_id="$GCP_PROJECT_ID"
    - export TF_VAR_zone="$GCP_ZONE"
    - export TF_VAR_ssh_public_key="$(cat /tmp/id_rsa.pub)"
    # 6. Clone only the terraform folder using sparse-checkout.
    - git clone --depth 1 --filter=blob:none --sparse https://github.com/alfonso-cloud-eng/python-automation-gitlab-jenkins-ansible.git
    - cd python-automation-gitlab-jenkins-ansible
    - git sparse-checkout set terraform
    - cd terraform
    # 7. Initialize and apply Terraform to provision the Jenkins VM.
    - terraform init
    - terraform apply -auto-approve
    # 8. Capture the Jenkins VM External IP.
    - export JENKINS_IP=$(terraform output -raw instance_nat_ip)
    - export ADMIN_USER=$(terraform output -raw admin_user)
    - export ADMIN_PASSWORD=$(terraform output -raw admin_password)
    # 9. Go back to the repository root (where your Ansible playbook is located).
    - cd ..
    # 10. Create and activate a Python virtual environment for Ansible.
    - python3 -m venv /tmp/venv
    - . /tmp/venv/bin/activate
    - pip install --upgrade pip
    - pip install ansible
    # 11. Run your Ansible playbook using the generated SSH key.
    - |
      ansible-playbook playbook.yml \
        -i "${JENKINS_IP}," \
        --user=jenkins \
        --private-key=/tmp/id_rsa \
        --ssh-extra-args='-o StrictHostKeyChecking=no' \
        --extra-vars "slack_webhook_url=${SLACK_WEBHOOK_URL}"
    - |
      echo "Access Jenkins on your VM here: http://$JENKINS_IP:8080"
      echo "Jenkins Admin Username: $ADMIN_USER"
      echo "Jenkins Admin Password: $ADMIN_PASSWORD"
  only:
    - main
